name: Build Distributions

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Build with Gradle
        run: ./gradlew assemble distZip
      - name: Archive Distributions DEB
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: build/distributions/*.deb
      - name: Archive Distributions ZIP
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: build/distributions/*.zip
  build-mac:
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download JDK 14 with jpackage
        run: wget -q https://download.java.net/java/GA/jdk14/076bab302c7b4508975440c56f6cc26a/36/GPL/openjdk-14_osx-x64_bin.tar.gz
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Extract JDK 14
        uses: brunoborges/justextract@master
        with:
          file: openjdk-14_osx-x64_bin.tar.gz
      - name: Build with Gradle
        run: ./gradlew assemble -Dbadass.jlink.jpackage.home=${GITHUB_WORKSPACE}/jdk-14.jdk/Contents/Home
      - name: Archive Distributions DMG
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: build/distributions/*.dmg
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Build with Gradle
        run: ./gradlew assemble
      - name: Archive Distributions MSI
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: build/distributions/*.msi
  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]
    if: startWith(github.ref, "ref/tag")
    steps:
      - name: Download Dist
        uses: actions/download-artifact@v2
      - name: Display structure of downloaded files
        run: ls -R
      - name: Get Branch Name
        uses: nelonoel/branch-name@v1
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.BRANCH_NAME }}
          release_name: Release ${{ env.BRANCH_NAME }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: distributions/*
          asset_name: Photo2Kml Installers